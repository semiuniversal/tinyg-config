{"version":3,"sources":["logo.svg","App.js","reportWebVitals.js","index.js"],"names":["App","state","response","post","responseToPost","callApi","a","fetch","json","body","status","Error","message","handleSubmit","e","preventDefault","method","headers","JSON","stringify","text","setState","this","then","res","express","catch","err","console","log","className","src","logo","alt","href","target","rel","onSubmit","type","value","onChange","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wPAAe,MAA0B,iCCmE1BA,G,kNA9DbC,MAAQ,CACNC,SAAU,GACVC,KAAM,GACNC,eAAgB,I,EAOlBC,Q,sBAAU,8BAAAC,EAAA,sEACeC,MAAM,cADrB,cACFL,EADE,gBAEWA,EAASM,OAFpB,UAEFC,EAFE,OAGgB,MAApBP,EAASQ,OAHL,sBAG2BC,MAAMF,EAAKG,SAHtC,gCAIDH,GAJC,2C,EAMVI,a,uCAAe,WAAOC,GAAP,iBAAAR,EAAA,6DACbQ,EAAEC,iBADW,SAEUR,MAAM,aAAc,CACzCS,OAAQ,OACRC,QAAS,CACP,eAAgB,oBAElBR,KAAMS,KAAKC,UAAU,CAAEhB,KAAM,EAAKF,MAAME,SAP7B,cAEPD,EAFO,gBASMA,EAASkB,OATf,OASPX,EATO,OAUb,EAAKY,SAAS,CAAEjB,eAAgBK,IAVnB,2C,wHAXM,IAAD,OAClBa,KAAKjB,UACFkB,MAAK,SAACC,GAAD,OAAS,EAAKH,SAAS,CAAEnB,SAAUsB,EAAIC,aAC5CC,OAAM,SAACC,GAAD,OAASC,QAAQC,IAAIF,Q,+BAoBtB,IAAD,OACP,OACE,sBAAKG,UAAU,MAAf,UACE,yBAAQA,UAAU,aAAlB,UACE,qBAAKC,IAAKC,EAAMF,UAAU,WAAWG,IAAI,SACzC,sCACO,8CADP,0BAGA,mBACEH,UAAU,WACVI,KAAK,sBACLC,OAAO,SACPC,IAAI,sBAJN,4BASF,4BAAId,KAAKrB,MAAMC,WACf,uBAAMmC,SAAUf,KAAKT,aAArB,UACE,4BACE,uDAEF,uBACEyB,KAAK,OACLC,MAAOjB,KAAKrB,MAAME,KAClBqC,SAAU,SAAC1B,GAAD,OAAO,EAAKO,SAAS,CAAElB,KAAMW,EAAEqB,OAAOI,WAElD,wBAAQD,KAAK,SAAb,uBAEF,4BAAIhB,KAAKrB,MAAMG,wB,GA1DLqC,cCQHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBrB,MAAK,YAAkD,IAA/CsB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.e2582c6c.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.103b5fa1.svg\";","import React, { Component } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\n\nclass App extends Component {\n  state = {\n    response: '',\n    post: '',\n    responseToPost: '',\n  };\n  componentDidMount() {\n    this.callApi()\n      .then((res) => this.setState({ response: res.express }))\n      .catch((err) => console.log(err));\n  }\n  callApi = async () => {\n    const response = await fetch('/api/hello');\n    const body = await response.json();\n    if (response.status !== 200) throw Error(body.message);\n    return body;\n  };\n  handleSubmit = async (e) => {\n    e.preventDefault();\n    const response = await fetch('/api/world', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({ post: this.state.post }),\n    });\n    const body = await response.text();\n    this.setState({ responseToPost: body });\n  };\n  render() {\n    return (\n      <div className='App'>\n        <header className='App-header'>\n          <img src={logo} className='App-logo' alt='logo' />\n          <p>\n            Edit <code>src/App.js</code> and save to reload.\n          </p>\n          <a\n            className='App-link'\n            href='https://reactjs.org'\n            target='_blank'\n            rel='noopener noreferrer'\n          >\n            Learn React\n          </a>\n        </header>\n        <p>{this.state.response}</p>\n        <form onSubmit={this.handleSubmit}>\n          <p>\n            <strong>Post to Server:</strong>\n          </p>\n          <input\n            type='text'\n            value={this.state.post}\n            onChange={(e) => this.setState({ post: e.target.value })}\n          />\n          <button type='submit'>Submit</button>\n        </form>\n        <p>{this.state.responseToPost}</p>\n      </div>\n    );\n  }\n}\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}